import os
import re

from telegram.ext import Application, CommandHandler, MessageHandler, filters

# === –°–ø–∏—Å–∫–∏ —Ç—Ä–∏–≥–≥–µ—Ä–æ–≤ ===

BAD_WORDS = {
    '–±–ª—è', '–±–ª—è—Ç—å', '–±–ª—è–¥—å', '—Å—É–∫–∞', '—Å—É—á–∫–∞', '–ø–∏–∑–¥–∞', '–ø–∏–∑–¥–µ—Ü', '—Ö—É–π', '—Ö—É—ë–≤—ã–π', '—Ö—É–µ–≤—ã–π',
    '–µ–±–∞—Ç—å', '—ë–±–∞—Ç—å', '–Ω–∞—Ö—É–π', '–Ω–∞—Ö–µ—Ä', '–Ω–∞—Ö—Ä–µ–Ω', '–∑–∞–µ–±–∞–ª', '–∑–∞–µ–±–∏—Å—å', '–æ—Ö—É–µ–ª', '–æ—Ö—É–µ–Ω–Ω–æ',
    '–≥–∞–Ω–¥–æ–Ω', '–≥–æ–≤–Ω–æ', '–≥–æ–≤–Ω—é–∫', '–º—É–¥–∞–∫', '–º—É–¥–∏–ª–∞', '–ª–æ—Ö', '–ª–æ—à–∞—Ä–∞', '–ø–∏–¥–æ—Ä', '–ø–µ–¥–∏–∫',
    '—á–º–æ', '—É—Ä–æ–¥', '—Å–∫–æ—Ç–∏–Ω–∞', '—Å–≤–æ–ª–æ—á—å', '–¥—Ä–æ—á–∏—Ç—å', '–¥—Ä–æ—á–∏–ª–∞', '–∑–∞–ª—É–ø–∞', '–º—Ä–∞–∑—å'
}

UNDERSTAND_WORDS = {'–ø–æ–Ω—è–ª', '–ø–æ–Ω—è–ª–∞'}
EAT_WORDS = {'–µ—Å—Ç—å'}

# === –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ ===

def clean_word(word):
    return re.sub(r'[^–∞-—è—ë]', '', word.lower())

def text_to_words(text):
    return {clean_word(w) for w in text.split()}

def contains_bad_word(text):
    if not text:
        return False
    return bool(text_to_words(text) & BAD_WORDS)

def contains_understand_word(text):
    if not text:
        return False
    return bool(text_to_words(text) & UNDERSTAND_WORDS)

def contains_eat_word(text):
    if not text:
        return False
    # –ò—â–µ–º —Å–ª–æ–≤–æ "–µ—Å—Ç—å" –∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ (–∞ –Ω–µ –≤–Ω—É—Ç—Ä–∏ "–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é")
    words = re.findall(r'\b\w+\b', text.lower())
    return '–µ—Å—Ç—å' in words

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –æ—Ç–≤–µ—Ç–æ–≤ ===

async def reply_praise(update, context):
    await update.message.reply_text("–¢—ã –º–æ–ª–æ–¥–µ—Ü! –î–µ—Ä–∂–∏ –∫–æ–Ω—Ñ–µ—Ç–∫—É!")

async def reply_bad_words(update, context):
    await update.message.reply_text("–ü–æ–ª—É—á–∏—à—å –ø–æ –≥—É–±–∞–º –∏ —Ä—É–∫–∞–º!")

async def reply_money(update, context):
    await update.message.reply_text("–î–µ–Ω–µ–≥ –Ω–µ—Ç! –ù–µ –±—ã–ª–æ! –ò –Ω–µ –±—É–¥–µ—Ç!")

async def reply_understand(update, context):
    await update.message.reply_text("–¢–æ—á–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ?! –ò–ª–∏ –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–±—ä—è—Å–Ω–∏—Ç—å?")

async def reply_eat(update, context):
    await update.message.reply_text("–ù–∞ –ø–æ–ø–µ —à–µ—Ä—Å—Ç—å!")

async def reply_forward_or_link(update, context):
    await update.message.reply_text("–ê —ç—Ç–æ —Ç–æ—á–Ω–æ —Ç—É—Ç –Ω—É–∂–Ω–æ?")

# === –ì–ª–∞–≤–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ ===

async def handle_text(update, context):
    text = update.message.text
    if not text:
        return

    words_clean = text_to_words(text)
    text_lower = text.lower()

    # 1. –ú–∞—Ç ‚Äî –≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç
    if contains_bad_word(text):
        await reply_bad_words(update, context)
        return

    # 2. –°–ª–æ–≤–æ "–¥–µ–Ω—å–≥–∏"
    if '–¥–µ–Ω—å–≥–∏' in text_lower.split():
        await reply_money(update, context)
        return

    # 3. –°–ª–æ–≤–∞ "–ø–æ–Ω—è–ª"/"–ø–æ–Ω—è–ª–∞"
    if contains_understand_word(text):
        await reply_understand(update, context)
        return

    # 4. –°–ª–æ–≤–æ "–µ—Å—Ç—å" (–∫–∞–∫ –æ—Ç–¥–µ–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ)
    if contains_eat_word(text):
        await reply_eat(update, context)
        return

    # 5. –ü–µ—Ä–µ—Å—ã–ª–∫–∏ –∏ —Å—Å—ã–ª–∫–∏
    if update.message.forward_date:
        await reply_forward_or_link(update, context)
        return

    if "http://" in text or "https://" in text:
        await reply_forward_or_link(update, context)
        return

# === –ö–æ–º–∞–Ω–¥—ã ===

async def start(update, context):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø —Å–µ–º–µ–π–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ üç¨\n"
        "–§–æ—Ç–æ ‚Üí –ø–æ—Ö–≤–∞–ª—é!\n"
        "–ú–∞—Ç ‚Üí –ø–æ –≥—É–±–∞–º!\n"
        "¬´–î–µ–Ω—å–≥–∏¬ª ‚Üí –Ω–µ –±—É–¥–µ—Ç!\n"
        "¬´–ü–æ–Ω—è–ª/–ø–æ–Ω—è–ª–∞¬ª ‚Üí —É—Ç–æ—á–Ω—é!\n"
        "¬´–ï—Å—Ç—å¬ª ‚Üí –Ω–∞ –ø–æ–ø–µ —à–µ—Ä—Å—Ç—å!\n"
        "–°—Å—ã–ª–∫–∏/–ø–µ—Ä–µ—Å—ã–ª–∫–∏ ‚Üí ¬´–ê —ç—Ç–æ —Ç–æ—á–Ω–æ —Ç—É—Ç –Ω—É–∂–Ω–æ?¬ª"
    )

async def help_command(update, context):
    await update.message.reply_text(
        "–Ø —Ä–µ–∞–≥–∏—Ä—É—é –Ω–∞:\n"
        "üì∑ –§–æ—Ç–æ ‚Üí ¬´–¢—ã –º–æ–ª–æ–¥–µ—Ü! –î–µ—Ä–∂–∏ –∫–æ–Ω—Ñ–µ—Ç–∫—É!¬ª\n"
        "ü§¨ –ú–∞—Ç ‚Üí ¬´–ü–æ–ª—É—á–∏—à—å –ø–æ –≥—É–±–∞–º –∏ —Ä—É–∫–∞–º!¬ª\n"
        "üí∞ ¬´–î–µ–Ω—å–≥–∏¬ª ‚Üí ¬´–î–µ–Ω–µ–≥ –Ω–µ—Ç! –ù–µ –±—ã–ª–æ! –ò –Ω–µ –±—É–¥–µ—Ç!¬ª\n"
        "üß† ¬´–ü–æ–Ω—è–ª/–ü–æ–Ω—è–ª–∞¬ª ‚Üí ¬´–¢–æ—á–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ?! –ò–ª–∏ –µ—â—ë –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–±—ä—è—Å–Ω–∏—Ç—å?¬ª\n"
        "üçΩÔ∏è ¬´–ï—Å—Ç—å¬ª ‚Üí ¬´–ù–∞ –ø–æ–ø–µ —à–µ—Ä—Å—Ç—å!¬ª\n"
        "üîÅ –ü–µ—Ä–µ—Å—ã–ª–∫–∏ / üîó –°—Å—ã–ª–∫–∏ ‚Üí ¬´–ê —ç—Ç–æ —Ç–æ—á–Ω–æ —Ç—É—Ç –Ω—É–∂–Ω–æ?¬ª"
    )

# === –ó–∞–ø—É—Å–∫ ===

def main():
    token = os.getenv("BOT_TOKEN")
    app = Application.builder().token(token).build()
    
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.PHOTO, reply_praise))
    app.add_handler(MessageHandler(filters.TEXT, handle_text))
    app.add_handler(MessageHandler(
        filters.FORWARDED & ~filters.PHOTO & ~filters.TEXT,
        reply_forward_or_link
    ))
    
    app.run_polling()

if __name__ == "__main__":
    main()
